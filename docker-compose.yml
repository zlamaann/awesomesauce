version: "3"
services:
  #############
  ## SERVER ##
  server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - webapp
      - postgres
    depends_on:
      - postgres
    environment:
      - SECRET='¯\_(ツ)_/¯'
    restart: always
    command: ['./wait-for-it.sh', 'postgres:5432', '--', 'node', 'main.js']
    container_name: server
  #############
  ## CLIENT ##
  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - webapp
    ports:
      - 80:80
    restart: always
    container_name: client
  ##############
  ## POSTGRES ##
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
    - "5432:5432"
    volumes:
    - /data/postgres:/data/postgres
    env_file:
    - docker.env
    networks:
    - postgres
    restart: always
 
  pgadmin:
    links:
    - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
    - "8080:80"
    volumes:
    - /data/pgadmin:/root/.pgadmin
    env_file:
    - docker.env
    networks:
    - postgres
 
networks:
  postgres:
    driver: bridge
  webapp:
    driver: bridge